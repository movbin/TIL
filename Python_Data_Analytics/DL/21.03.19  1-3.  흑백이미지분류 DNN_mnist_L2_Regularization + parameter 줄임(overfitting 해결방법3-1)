{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"21.03.19  1-2.  흑백이미지분류 DNN_mnist_L2_Regularization(overfitting 해결방법3)의 사본","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMUBR3ToZ02h8QNycEpH1ql"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"1Pt5JLo41L85"},"source":["# MNIST - Categorical Classification\n","> Overfitting Issue\n","\n","## Import TEnsorflow & Keras"]},{"cell_type":"markdown","metadata":{"id":"3dpS8Oo82PZs"},"source":["- import TensorFlow"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"phCjI1BW1LHn","executionInfo":{"status":"ok","timestamp":1616118915549,"user_tz":-540,"elapsed":1970,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}},"outputId":"a34fc7c6-65b5-425b-82f2-830d168a28ac"},"source":["import tensorflow as tf\n","tf.__version__"],"execution_count":1,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'2.4.1'"]},"metadata":{"tags":[]},"execution_count":1}]},{"cell_type":"markdown","metadata":{"id":"S8Sdz_7Q2Utq"},"source":["- GPU 설정 확인"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"jjJn2bN21Npc","executionInfo":{"status":"ok","timestamp":1616118920738,"user_tz":-540,"elapsed":7141,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}},"outputId":"c5c0d5b8-f5e7-4d15-857e-8675a918a88b"},"source":["tf.test.gpu_device_name()"],"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'/device:GPU:0'"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"markdown","metadata":{"id":"vwZOHzs-2gtc"},"source":["- import Keras"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"cr6V_UCW1NmB","executionInfo":{"status":"ok","timestamp":1616118920739,"user_tz":-540,"elapsed":7134,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}},"outputId":"1f90abff-3163-43fd-83cd-5160e96b3e97"},"source":["import keras\n","keras.__version__"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'2.4.3'"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"eC63KDeO2kg3"},"source":["# Ⅰ.MNIST Data_Set Load & Review\n"]},{"cell_type":"markdown","metadata":{"id":"B7aCg6j92pjt"},"source":["> ## 1) Load MNIST Data_Set"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"64vhSJIQ1NjK","executionInfo":{"status":"ok","timestamp":1616118920976,"user_tz":-540,"elapsed":7364,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}},"outputId":"657c4425-7f52-4878-9540-05cc63b1c32e"},"source":["from keras.datasets import mnist\n","(X_train, y_train), (X_test, y_test) = mnist.load_data()"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11493376/11490434 [==============================] - 0s 0us/step\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"xUYVyDKx21Y7"},"source":["- Train_Data Information"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7q9NUL1z1Nd_","executionInfo":{"status":"ok","timestamp":1616118921342,"user_tz":-540,"elapsed":7722,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}},"outputId":"b77bcb90-a242-4a99-a9c7-2dd36f4a07e8"},"source":["print(len(X_train))\n","print(X_train.shape) # 이미지 6만장이 28 x 28의 일정한 크기로 구성되어 있다\n","\n","print(len(y_train))\n","print(y_train[0:5])"],"execution_count":5,"outputs":[{"output_type":"stream","text":["60000\n","(60000, 28, 28)\n","60000\n","[5 0 4 1 9]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"gW2ekAcz3KW8"},"source":["- Test_Data Information"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IvQ3WENr1NbK","executionInfo":{"status":"ok","timestamp":1616118921343,"user_tz":-540,"elapsed":7717,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}},"outputId":"6191df69-ec3a-40e2-86e3-ca3e69eaafd5"},"source":["print(len(X_test))\n","print(X_test.shape) # 이미지 1만장이 28 x 28의 일정한 크기로 구성되어 있다\n","\n","\n","print(len(y_test))\n","print(y_test[0:5])"],"execution_count":6,"outputs":[{"output_type":"stream","text":["10000\n","(10000, 28, 28)\n","10000\n","[7 2 1 0 4]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"DjYa5wKe3SKK"},"source":["> ## 2) Visualization"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"iygPOVYF3UNp","executionInfo":{"status":"ok","timestamp":1616118921345,"user_tz":-540,"elapsed":7706,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}},"outputId":"75883a97-654b-4c81-9e8f-f5408f8e82eb"},"source":["import matplotlib.pyplot as plt\n","digit = X_train[4]  # 9인지 확인\n","plt.imshow(digit, cmap = 'gray')\n","plt.show()"],"execution_count":7,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PYMKXLae3dzx","executionInfo":{"status":"ok","timestamp":1616118921345,"user_tz":-540,"elapsed":7699,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}},"outputId":"4395f304-48e7-491c-b266-549124dd4ab6"},"source":["import numpy as np\n","np.set_printoptions(linewidth = 150) \n","\n","print(X_train[4]) # array로 확인"],"execution_count":8,"outputs":[{"output_type":"stream","text":["[[  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   0   0   0  55 148 210 253 253 113  87 148  55   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   0   0  87 232 252 253 189 210 252 252 253 168   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   4  57 242 252 190  65   5  12 182 252 253 116   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0  96 252 252 183  14   0   0  92 252 252 225  21   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0 132 253 252 146  14   0   0   0 215 252 252  79   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0 126 253 247 176   9   0   0   8  78 245 253 129   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0  16 232 252 176   0   0   0  36 201 252 252 169  11   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0  22 252 252  30  22 119 197 241 253 252 251  77   0   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0  16 231 252 253 252 252 252 226 227 252 231   0   0   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0  55 235 253 217 138  42  24 192 252 143   0   0   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   0   0   0   0  62 255 253 109   0   0   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   0   0   0   0  71 253 252  21   0   0   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   0   0   0   0   0 253 252  21   0   0   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   0   0   0   0  71 253 252  21   0   0   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   0   0   0   0 106 253 252  21   0   0   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   0   0   0   0  45 255 253  21   0   0   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   0   0   0   0   0 218 252  56   0   0   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   0   0   0   0   0  96 252 189  42   0   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   0   0   0   0   0  14 184 252 170  11   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0  14 147 252  42   0   0   0   0   0   0   0   0   0]\n"," [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"RK0Bo53o3SEI"},"source":["# Ⅱ. Data Preprocessing\n","\n"]},{"cell_type":"markdown","metadata":{"id":"KwV7lJDT3pA9"},"source":["> ## 1) Reshape and Normalization\n","\n","- reshape\n","   - (60000, 28, 28) to (60000, 28 * 28)\n","   - 한 차원 내린다"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Tb95ey7o1NYX","executionInfo":{"status":"ok","timestamp":1616118921346,"user_tz":-540,"elapsed":7693,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}},"outputId":"c2c6769b-4730-42f8-b5af-467ea34c9f04"},"source":["X_train = X_train.reshape((60000, 28 * 28))\n","X_test = X_test.reshape((10000, 28 * 28))\n","\n","X_train.shape, X_test.shape"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((60000, 784), (10000, 784))"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"markdown","metadata":{"id":"B5-iVD153-mN"},"source":["- Normalization"]},{"cell_type":"code","metadata":{"id":"qyE8px4j1NS8","executionInfo":{"status":"ok","timestamp":1616118921623,"user_tz":-540,"elapsed":7966,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}}},"source":["X_train = X_train.astype(float) / 255\n","X_test = X_test.astype(float) / 255\n","# 정규화식 : x - min / max - min인데, min = 0, max = 255이라서 255로 나눈다"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l2MUH0oB4JNY","executionInfo":{"status":"ok","timestamp":1616118921623,"user_tz":-540,"elapsed":7957,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}},"outputId":"0e317c7a-e8e9-471d-a5e4-4aa21163c5b6"},"source":["print(X_train[4])"],"execution_count":11,"outputs":[{"output_type":"stream","text":["[0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.21568627 0.58039216 0.82352941 0.99215686 0.99215686 0.44313725 0.34117647 0.58039216 0.21568627 0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.34117647 0.90980392 0.98823529 0.99215686 0.74117647 0.82352941 0.98823529 0.98823529 0.99215686 0.65882353 0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.01568627 0.22352941 0.94901961 0.98823529 0.74509804 0.25490196 0.01960784 0.04705882 0.71372549 0.98823529 0.99215686 0.45490196\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.37647059 0.98823529 0.98823529 0.71764706 0.05490196 0.         0.         0.36078431 0.98823529 0.98823529\n"," 0.88235294 0.08235294 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.51764706 0.99215686 0.98823529 0.57254902 0.05490196 0.         0.         0.         0.84313725\n"," 0.98823529 0.98823529 0.30980392 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.49411765 0.99215686 0.96862745 0.69019608 0.03529412 0.         0.         0.03137255\n"," 0.30588235 0.96078431 0.99215686 0.50588235 0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.0627451  0.90980392 0.98823529 0.69019608 0.         0.         0.\n"," 0.14117647 0.78823529 0.98823529 0.98823529 0.6627451  0.04313725 0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.08627451 0.98823529 0.98823529 0.11764706 0.08627451\n"," 0.46666667 0.77254902 0.94509804 0.99215686 0.98823529 0.98431373 0.30196078 0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.0627451  0.90588235 0.98823529\n"," 0.99215686 0.98823529 0.98823529 0.98823529 0.88627451 0.89019608 0.98823529 0.90588235 0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.21568627 0.92156863 0.99215686 0.85098039 0.54117647 0.16470588 0.09411765 0.75294118 0.98823529 0.56078431 0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.24313725 1.         0.99215686 0.42745098 0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.27843137 0.99215686 0.98823529\n"," 0.08235294 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.99215686 0.98823529 0.08235294 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.27843137 0.99215686 0.98823529 0.08235294 0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.41568627 0.99215686 0.98823529 0.08235294 0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.17647059 1.         0.99215686 0.08235294 0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.85490196 0.98823529 0.21960784 0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.37647059 0.98823529 0.74117647\n"," 0.16470588 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.05490196\n"," 0.72156863 0.98823529 0.66666667 0.04313725 0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.05490196 0.57647059 0.98823529 0.16470588 0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.         0.\n"," 0.         0.         0.         0.        ]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"ld-r685r4IPw"},"source":["> ## 2) One Hot Encoding"]},{"cell_type":"code","metadata":{"id":"sjWSsBws1NPq","executionInfo":{"status":"ok","timestamp":1616118921624,"user_tz":-540,"elapsed":7957,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}}},"source":["from keras.utils import to_categorical\n","y_train = to_categorical(y_train)\n","y_test = to_categorical(y_test)"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tX32rhzC1NNE","executionInfo":{"status":"ok","timestamp":1616118921625,"user_tz":-540,"elapsed":7952,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}},"outputId":"0871fe47-4d66-484e-933f-f003f2ade784"},"source":["print(y_train[:5])\n","# 5, 0, 4, 1, 9 표현\n","\n","print(y_test[:5])\n","# 7, 2, 1, 0, 4 표현"],"execution_count":13,"outputs":[{"output_type":"stream","text":["[[0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]\n"," [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n"," [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]\n"," [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]\n"," [0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]]\n","[[0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]\n"," [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]\n"," [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]\n"," [1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n"," [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"2EA1ITg65G6b"},"source":["# Ⅲ. MNIST Keras Modeling"]},{"cell_type":"markdown","metadata":{"id":"prf-YQEl5K-O"},"source":["> ## 1) Model Define\n","\n","- 모델 신경망 구조 정의\n","   - 2개의 Hidden Layers & 768개의 nodes\n","   - model capacity는 해결방법2처럼 파라미터 수를 줄였다\n","   - L2 Regularization 적용"]},{"cell_type":"code","metadata":{"id":"bHQi5tz81NIm","executionInfo":{"status":"ok","timestamp":1616118921625,"user_tz":-540,"elapsed":7950,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}}},"source":["from keras import models\n","from keras import layers\n","from keras import regularizers\n","\n","mnist = models.Sequential()\n","mnist.add(layers.Dense(256, activation = 'relu', \n","                       kernel_regularizer = regularizers.l2(0.00001),\n","                       input_shape = (28 * 28,))) # 784 * 512 + 512\n","mnist.add(layers.Dense(10, activation = 'softmax')) # 256 * 10 + 10"],"execution_count":14,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"uR_FU2tE5p0f"},"source":["- 모델 구조 확인"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MwsTw_a31NDf","executionInfo":{"status":"ok","timestamp":1616118921626,"user_tz":-540,"elapsed":7946,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}},"outputId":"e2a6a116-2058-4eee-fa93-6d984734813c"},"source":["mnist.summary()\n","# 파라미터를 줄였다."],"execution_count":15,"outputs":[{"output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","dense (Dense)                (None, 256)               200960    \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 10)                2570      \n","=================================================================\n","Total params: 203,530\n","Trainable params: 203,530\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"3LFgsxVo5tQD"},"source":["> ## 2) Model Compile\n","\n","- 모델 학습방법 설정"]},{"cell_type":"code","metadata":{"id":"THrDdk9B1M-M","executionInfo":{"status":"ok","timestamp":1616118921627,"user_tz":-540,"elapsed":7946,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}}},"source":["mnist.compile(loss = 'categorical_crossentropy',\n","              optimizer = 'rmsprop',\n","              metrics = ['accuracy'])\n","# 0 ~ 9를 분류해야 하니까 다중분류_CEE"],"execution_count":16,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hYVniYhj55-5"},"source":["> ## 3) Model Fit\n","\n","- 약 3분"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KWiKpuop1M7d","executionInfo":{"status":"ok","timestamp":1616119031934,"user_tz":-540,"elapsed":118248,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}},"outputId":"eb7ae35c-9eed-4e41-9dec-d7e91c957151"},"source":["%%time\n","hist_mnist = mnist.fit(X_train, y_train,\n","                       epochs = 100,\n","                       batch_size = 128,\n","                       validation_split = 0.2)"],"execution_count":17,"outputs":[{"output_type":"stream","text":["Epoch 1/100\n","375/375 [==============================] - 5s 4ms/step - loss: 0.5281 - accuracy: 0.8551 - val_loss: 0.1790 - val_accuracy: 0.9525\n","Epoch 2/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.1662 - accuracy: 0.9538 - val_loss: 0.1284 - val_accuracy: 0.9647\n","Epoch 3/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.1087 - accuracy: 0.9701 - val_loss: 0.1181 - val_accuracy: 0.9687\n","Epoch 4/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0805 - accuracy: 0.9775 - val_loss: 0.1014 - val_accuracy: 0.9718\n","Epoch 5/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0659 - accuracy: 0.9832 - val_loss: 0.1009 - val_accuracy: 0.9730\n","Epoch 6/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0540 - accuracy: 0.9865 - val_loss: 0.0902 - val_accuracy: 0.9752\n","Epoch 7/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0448 - accuracy: 0.9889 - val_loss: 0.0920 - val_accuracy: 0.9751\n","Epoch 8/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0383 - accuracy: 0.9919 - val_loss: 0.0902 - val_accuracy: 0.9772\n","Epoch 9/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0318 - accuracy: 0.9934 - val_loss: 0.0897 - val_accuracy: 0.9768\n","Epoch 10/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0292 - accuracy: 0.9944 - val_loss: 0.0938 - val_accuracy: 0.9762\n","Epoch 11/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0248 - accuracy: 0.9954 - val_loss: 0.0850 - val_accuracy: 0.9787\n","Epoch 12/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0226 - accuracy: 0.9962 - val_loss: 0.0866 - val_accuracy: 0.9787\n","Epoch 13/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0207 - accuracy: 0.9966 - val_loss: 0.0908 - val_accuracy: 0.9765\n","Epoch 14/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0187 - accuracy: 0.9973 - val_loss: 0.0881 - val_accuracy: 0.9777\n","Epoch 15/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0166 - accuracy: 0.9981 - val_loss: 0.0911 - val_accuracy: 0.9778\n","Epoch 16/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0157 - accuracy: 0.9981 - val_loss: 0.0926 - val_accuracy: 0.9781\n","Epoch 17/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0149 - accuracy: 0.9987 - val_loss: 0.0889 - val_accuracy: 0.9793\n","Epoch 18/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0140 - accuracy: 0.9985 - val_loss: 0.0919 - val_accuracy: 0.9778\n","Epoch 19/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0140 - accuracy: 0.9990 - val_loss: 0.0949 - val_accuracy: 0.9787\n","Epoch 20/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0124 - accuracy: 0.9990 - val_loss: 0.0963 - val_accuracy: 0.9787\n","Epoch 21/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0120 - accuracy: 0.9990 - val_loss: 0.0921 - val_accuracy: 0.9795\n","Epoch 22/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0114 - accuracy: 0.9991 - val_loss: 0.0949 - val_accuracy: 0.9792\n","Epoch 23/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0109 - accuracy: 0.9993 - val_loss: 0.1101 - val_accuracy: 0.9739\n","Epoch 24/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0111 - accuracy: 0.9993 - val_loss: 0.0919 - val_accuracy: 0.9802\n","Epoch 25/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0103 - accuracy: 0.9995 - val_loss: 0.0954 - val_accuracy: 0.9794\n","Epoch 26/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0103 - accuracy: 0.9995 - val_loss: 0.0966 - val_accuracy: 0.9782\n","Epoch 27/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0099 - accuracy: 0.9995 - val_loss: 0.0973 - val_accuracy: 0.9788\n","Epoch 28/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0096 - accuracy: 0.9995 - val_loss: 0.1076 - val_accuracy: 0.9768\n","Epoch 29/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0098 - accuracy: 0.9993 - val_loss: 0.1019 - val_accuracy: 0.9793\n","Epoch 30/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0093 - accuracy: 0.9993 - val_loss: 0.0987 - val_accuracy: 0.9799\n","Epoch 31/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0093 - accuracy: 0.9993 - val_loss: 0.0977 - val_accuracy: 0.9801\n","Epoch 32/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0088 - accuracy: 0.9995 - val_loss: 0.0975 - val_accuracy: 0.9778\n","Epoch 33/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0094 - accuracy: 0.9992 - val_loss: 0.0971 - val_accuracy: 0.9803\n","Epoch 34/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0092 - accuracy: 0.9992 - val_loss: 0.0996 - val_accuracy: 0.9794\n","Epoch 35/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0086 - accuracy: 0.9995 - val_loss: 0.1002 - val_accuracy: 0.9800\n","Epoch 36/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0086 - accuracy: 0.9994 - val_loss: 0.0989 - val_accuracy: 0.9799\n","Epoch 37/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0083 - accuracy: 0.9994 - val_loss: 0.0969 - val_accuracy: 0.9798\n","Epoch 38/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0081 - accuracy: 0.9995 - val_loss: 0.1036 - val_accuracy: 0.9795\n","Epoch 39/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0084 - accuracy: 0.9993 - val_loss: 0.0975 - val_accuracy: 0.9797\n","Epoch 40/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0083 - accuracy: 0.9992 - val_loss: 0.0945 - val_accuracy: 0.9800\n","Epoch 41/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0082 - accuracy: 0.9993 - val_loss: 0.1041 - val_accuracy: 0.9780\n","Epoch 42/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0087 - accuracy: 0.9989 - val_loss: 0.1089 - val_accuracy: 0.9759\n","Epoch 43/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0077 - accuracy: 0.9995 - val_loss: 0.0985 - val_accuracy: 0.9809\n","Epoch 44/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0077 - accuracy: 0.9993 - val_loss: 0.1041 - val_accuracy: 0.9804\n","Epoch 45/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0078 - accuracy: 0.9993 - val_loss: 0.1029 - val_accuracy: 0.9790\n","Epoch 46/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0078 - accuracy: 0.9995 - val_loss: 0.1155 - val_accuracy: 0.9781\n","Epoch 47/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0076 - accuracy: 0.9994 - val_loss: 0.1043 - val_accuracy: 0.9783\n","Epoch 48/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0074 - accuracy: 0.9992 - val_loss: 0.1036 - val_accuracy: 0.9797\n","Epoch 49/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0075 - accuracy: 0.9994 - val_loss: 0.1114 - val_accuracy: 0.9789\n","Epoch 50/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0075 - accuracy: 0.9995 - val_loss: 0.1018 - val_accuracy: 0.9802\n","Epoch 51/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0074 - accuracy: 0.9995 - val_loss: 0.1013 - val_accuracy: 0.9803\n","Epoch 52/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0077 - accuracy: 0.9993 - val_loss: 0.1027 - val_accuracy: 0.9782\n","Epoch 53/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0072 - accuracy: 0.9995 - val_loss: 0.1060 - val_accuracy: 0.9795\n","Epoch 54/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0070 - accuracy: 0.9995 - val_loss: 0.1162 - val_accuracy: 0.9761\n","Epoch 55/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0078 - accuracy: 0.9990 - val_loss: 0.1100 - val_accuracy: 0.9778\n","Epoch 56/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0069 - accuracy: 0.9995 - val_loss: 0.1119 - val_accuracy: 0.9795\n","Epoch 57/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0070 - accuracy: 0.9994 - val_loss: 0.1200 - val_accuracy: 0.9766\n","Epoch 58/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0073 - accuracy: 0.9993 - val_loss: 0.1041 - val_accuracy: 0.9806\n","Epoch 59/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0067 - accuracy: 0.9995 - val_loss: 0.1110 - val_accuracy: 0.9787\n","Epoch 60/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0076 - accuracy: 0.9992 - val_loss: 0.1128 - val_accuracy: 0.9756\n","Epoch 61/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0072 - accuracy: 0.9993 - val_loss: 0.1004 - val_accuracy: 0.9803\n","Epoch 62/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0070 - accuracy: 0.9994 - val_loss: 0.1078 - val_accuracy: 0.9810\n","Epoch 63/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0071 - accuracy: 0.9994 - val_loss: 0.1025 - val_accuracy: 0.9798\n","Epoch 64/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0076 - accuracy: 0.9994 - val_loss: 0.1037 - val_accuracy: 0.9803\n","Epoch 65/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0067 - accuracy: 0.9995 - val_loss: 0.1024 - val_accuracy: 0.9808\n","Epoch 66/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0066 - accuracy: 0.9994 - val_loss: 0.1088 - val_accuracy: 0.9790\n","Epoch 67/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0071 - accuracy: 0.9991 - val_loss: 0.1100 - val_accuracy: 0.9793\n","Epoch 68/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0077 - accuracy: 0.9990 - val_loss: 0.1038 - val_accuracy: 0.9803\n","Epoch 69/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0071 - accuracy: 0.9993 - val_loss: 0.1114 - val_accuracy: 0.9797\n","Epoch 70/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0066 - accuracy: 0.9994 - val_loss: 0.1003 - val_accuracy: 0.9814\n","Epoch 71/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0068 - accuracy: 0.9993 - val_loss: 0.0997 - val_accuracy: 0.9813\n","Epoch 72/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0062 - accuracy: 0.9994 - val_loss: 0.1081 - val_accuracy: 0.9797\n","Epoch 73/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0076 - accuracy: 0.9991 - val_loss: 0.1070 - val_accuracy: 0.9790\n","Epoch 74/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0080 - accuracy: 0.9991 - val_loss: 0.1120 - val_accuracy: 0.9794\n","Epoch 75/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0070 - accuracy: 0.9990 - val_loss: 0.1115 - val_accuracy: 0.9793\n","Epoch 76/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0069 - accuracy: 0.9992 - val_loss: 0.1027 - val_accuracy: 0.9795\n","Epoch 77/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0076 - accuracy: 0.9989 - val_loss: 0.1167 - val_accuracy: 0.9783\n","Epoch 78/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0064 - accuracy: 0.9995 - val_loss: 0.1157 - val_accuracy: 0.9779\n","Epoch 79/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0075 - accuracy: 0.9989 - val_loss: 0.0999 - val_accuracy: 0.9789\n","Epoch 80/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0081 - accuracy: 0.9987 - val_loss: 0.1106 - val_accuracy: 0.9802\n","Epoch 81/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0063 - accuracy: 0.9995 - val_loss: 0.1031 - val_accuracy: 0.9797\n","Epoch 82/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0071 - accuracy: 0.9991 - val_loss: 0.1051 - val_accuracy: 0.9808\n","Epoch 83/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0067 - accuracy: 0.9994 - val_loss: 0.1069 - val_accuracy: 0.9800\n","Epoch 84/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0069 - accuracy: 0.9993 - val_loss: 0.1224 - val_accuracy: 0.9780\n","Epoch 85/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0063 - accuracy: 0.9994 - val_loss: 0.1153 - val_accuracy: 0.9787\n","Epoch 86/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0069 - accuracy: 0.9991 - val_loss: 0.1155 - val_accuracy: 0.9789\n","Epoch 87/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0067 - accuracy: 0.9991 - val_loss: 0.1098 - val_accuracy: 0.9803\n","Epoch 88/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0064 - accuracy: 0.9993 - val_loss: 0.1201 - val_accuracy: 0.9783\n","Epoch 89/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0065 - accuracy: 0.9994 - val_loss: 0.1227 - val_accuracy: 0.9779\n","Epoch 90/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0066 - accuracy: 0.9992 - val_loss: 0.1335 - val_accuracy: 0.9752\n","Epoch 91/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0070 - accuracy: 0.9992 - val_loss: 0.1101 - val_accuracy: 0.9789\n","Epoch 92/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0078 - accuracy: 0.9990 - val_loss: 0.1270 - val_accuracy: 0.9772\n","Epoch 93/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0069 - accuracy: 0.9991 - val_loss: 0.1183 - val_accuracy: 0.9803\n","Epoch 94/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0075 - accuracy: 0.9987 - val_loss: 0.1131 - val_accuracy: 0.9788\n","Epoch 95/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0071 - accuracy: 0.9990 - val_loss: 0.1166 - val_accuracy: 0.9793\n","Epoch 96/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0073 - accuracy: 0.9989 - val_loss: 0.1268 - val_accuracy: 0.9757\n","Epoch 97/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0068 - accuracy: 0.9990 - val_loss: 0.1314 - val_accuracy: 0.9773\n","Epoch 98/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0060 - accuracy: 0.9996 - val_loss: 0.1199 - val_accuracy: 0.9792\n","Epoch 99/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0070 - accuracy: 0.9991 - val_loss: 0.1226 - val_accuracy: 0.9783\n","Epoch 100/100\n","375/375 [==============================] - 1s 3ms/step - loss: 0.0073 - accuracy: 0.9989 - val_loss: 0.1184 - val_accuracy: 0.9791\n","CPU times: user 1min 58s, sys: 17 s, total: 2min 15s\n","Wall time: 1min 50s\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"w0bwNWOj6Hxx"},"source":["> ## 4) 학습 결과 시각화 - Overfitting\n","\n","- Loss Visualization"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":404},"id":"CGLn6D0w1M4w","executionInfo":{"status":"ok","timestamp":1616119101333,"user_tz":-540,"elapsed":703,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}},"outputId":"6bf876f4-0b00-4ddd-92e3-198e0a9b549d"},"source":["import matplotlib.pyplot as plt\n","epochs = range(1, len(hist_mnist.history['loss']) + 1)\n","\n","plt.figure(figsize = (9, 6))\n","plt.plot(epochs, hist_mnist.history['loss'])\n","plt.plot(epochs, hist_mnist.history['val_loss'])\n","plt.title('Training & Validation Loss')\n","plt.ylim(0, 0.2)\n","plt.xlabel('Epochs')\n","plt.ylabel('Loss')\n","plt.legend(['Training Loss', 'Validation Loss'])\n","plt.grid()\n","plt.show()\n","# overfitting이 파라미터 수를 줄이지 않은 L2 Regularization보다 줄어든 것을 확인\n","# 0.2 -> 0.125"],"execution_count":22,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 648x432 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"vLEcJYqq6ubu"},"source":["> ## 5) Model Evaluate\n","\n","- Loss & Accuracy"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GzJRrkUR1M2M","executionInfo":{"status":"ok","timestamp":1616119032739,"user_tz":-540,"elapsed":119034,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}},"outputId":"3af816ec-7948-4be6-f797-d1b0b86ef018"},"source":["loss, accuracy = mnist.evaluate(X_test, y_test)\n","\n","print('Loss = {:.5f}'.format(loss))\n","print('Accuracy = {:.5f}'.format(accuracy))\n","# test data에서 accuracy = 0.978로 가장 작게 나왔던 L2 Regularization보다 조금 높게 나옴\n","# Accuracy = 기본 모델 > 파라미터 줄인 모델 > 규제화 + 파라미터 줄인 모델 > 규제화"],"execution_count":19,"outputs":[{"output_type":"stream","text":["313/313 [==============================] - 1s 2ms/step - loss: 0.1132 - accuracy: 0.9798\n","Loss = 0.11319\n","Accuracy = 0.97980\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"7bWZH_L663hE"},"source":["> ## 6) Model Predict\n","\n","- Probability"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4axMM1jp1Mxb","executionInfo":{"status":"ok","timestamp":1616119032740,"user_tz":-540,"elapsed":119030,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}},"outputId":"0ed863c2-371c-494a-819f-cd77182895ea"},"source":["np.set_printoptions(suppress = True, precision = 9)\n","print(mnist.predict(X_test[:1,:]))"],"execution_count":20,"outputs":[{"output_type":"stream","text":["[[0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"jQMK6sKa7DqG"},"source":["- Class"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ijKJwi0y1Msl","executionInfo":{"status":"ok","timestamp":1616119032977,"user_tz":-540,"elapsed":119261,"user":{"displayName":"김혜빈","photoUrl":"","userId":"10040074935049254379"}},"outputId":"252cf6c9-f3fa-474e-e1c3-5e08415ab4ae"},"source":["print(mnist.predict_classes(X_test[:1,:]))"],"execution_count":21,"outputs":[{"output_type":"stream","text":["[7]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/sequential.py:450: UserWarning: `model.predict_classes()` is deprecated and will be removed after 2021-01-01. Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype(\"int32\")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).\n","  warnings.warn('`model.predict_classes()` is deprecated and '\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"Zy0dwQcg7Jp9"},"source":["### \n","# The End\n","###"]}]}